{"NM":"fail 函数(已废弃)","CTS":[{"NT":"h","CT":"assert.fail 函数(已废弃)","CL":"#333"},{"NT":"p","CT":"assert.fail(actual, expected[, message[, operator[, stackStartFn]]]) ","CL":"#333"},{"NT":"floor","CTS":[{"NT":"h","CT":"历史变更","CL":"#333"},{"NT":"table","CTS":[["版本","改变"],["v10.0.0","传入多个参数调用此方法被废弃，并且会发出警告。"],["v0.1.21","于版本 v0.1.21 被添加。"]]}]},{"NT":"p","CT":"稳定性：被废弃(Deprecated) | 请使用``assert.fail([message])``或者其他 assert 方法作为替代。","CL":"#d60027"},{"NT":"list","CTS":[{"NT":"li","CT":"``actual``:any ","CL":"#333"},{"NT":"li","CT":"``expected``:any","CL":"#333"},{"NT":"li","CT":"``message``:string / Error","CL":"#333"},{"NT":"li","CT":"``operator``:string | Default: '!='","CL":"#333"},{"NT":"li","CT":"``stackStartFn``:Function | Default: assert.fail","CL":"#333"}],"OL":false},{"NT":"p","CT":"如果 message 是虚值(falsy)，错误信息会被设置为``actual`` + ``operator`` + ``expected``的格式。如果只提供了``actual``和``expected``，``operator``会被设为默认值(!=)。如果 message 被提供作为第三个参数，它会被被用作错误信息并且其它参数会被用作被抛出的错误对象的属性。如果传入了``stackStartFn``参数，上面的所有栈帧会被从堆栈追踪中去除(详见``Error.captureStackTrace``)。如果没有参数传入，则默认的错误信息``Failed``会被使用。","CL":"#333"},{"NT":"code","LG":"javascript","CT":"import assert from 'node:assert/strict';\n\nassert.fail('a', 'b');\n// AssertionError [ERR_ASSERTION]: 'a' != 'b'\n\nassert.fail(1, 2, undefined, '&gt;');\n// AssertionError [ERR_ASSERTION]: 1 &gt; 2\n\nassert.fail(1, 2, 'fail');\n// AssertionError [ERR_ASSERTION]: fail\n\nassert.fail(1, 2, 'whoops', '&gt;');\n// AssertionError [ERR_ASSERTION]: whoops\n\nassert.fail(1, 2, new TypeError('need array'));\n// TypeError: need array"},{"NT":"p","CT":"在最后三个例子中，``actual``, ``expected``, ``operator``对于错误信息没有影响。","CL":"#333"},{"NT":"hr"},{"NT":"p","CT":"使用``stackStartFn``截断异常的堆栈追踪的例子：","CL":"#333"},{"NT":"code","LG":"javascript","CT":"import assert from 'node:assert/strict';\n\nfunction suppressFrame() {\n  assert.fail('a', 'b', undefined, '!==', suppressFrame);\n}\nsuppressFrame();\n// AssertionError [ERR_ASSERTION]: 'a' !== 'b'\n//     at repl:1:1\n//     at ContextifyScript.Script.runInThisContext (vm.js:44:33)\n//     ..."}]}