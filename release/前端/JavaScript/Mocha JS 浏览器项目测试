{"NM":"Mocha JS 浏览器项目测试","CTS":[{"NT":"h","CT":"Mocha JS 浏览器项目测试及对 ES 模块的处理","CL":"#333"},{"NT":"p","CT":"使用 Mocha 自带命令初始化测试文件夹","CL":"#333"},{"NT":"code","LG":"shell","CT":"npx mocha init ./test"},{"NT":"p","CT":"可以看到，在 test 文件夹下出现了 index.html, mocha.js, mocha.css, tests.spec.js 四个文件。我们可以直接将测试代码写在 tests.spec.js 文件中，也可以新建文件，并使用 script 标签的方式引入到 HTML 文件当中。但要注意的是，这里引入的文件不能是 ES 模块，也就是不能使用 import / export ，否则会被 mocha 模块忽略。","CL":"#333"},{"NT":"p","CT":"那么该如何调用 ES 模块呢？","CL":"#333"},{"NT":"p","CT":"我们先安装 rollup","CL":"#333"},{"NT":"code","LG":"shell","CT":"npm install -D rollup"},{"NT":"p","CT":"再在项目根目录下创建 rollup.config.js 文件，其内容如下：","CL":"#333"},{"NT":"code","LG":"javascript","CT":"export default {\n    input: \"./src/index.js\", // 入口文件路径\n    output: {\n        file: \"bundle.js\", // 打包文件路径\n        name: \"module\", // 模块名称\n        exports: \"named\", // 如果项目只有一个标准导出，使用 \"default\"\n\n        // 下面两种方式选其一，使用效果差不多\n\n        format: \"umd\", // 使用 umd 模块格式\n        // --- --- --- --- --- --- ---\n        format: \"iife\",\n        globals: true,\n    }\n}"},{"NT":"p","CT":"再在 package.json 的 script 中加上如下语句：","CL":"#333"},{"NT":"code","LG":"javascript","CT":"\"build\": \"rollup -c\""},{"NT":"p","CT":"打开终端，执行``npm run build``，在前文提到的 index.html 中引入打包后的文件以替代原来的 ES 模块文件，这样你就可以直接通过``module.xxx``的方式调用项目中 export 出的东西了。","CL":"#333"},{"NT":"p","CT":"此时，在浏览器中直接打开 HTML 文件就可以查看测试结果了。","CL":"#333"},{"NT":"p","CT":"如果你想使用断言函数，你可以使用``console.assert()``，也可以引入相关的断言库，如 chai, should 等。","CL":"#333"}]}